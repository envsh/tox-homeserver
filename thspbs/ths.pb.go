// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ths.proto

package thspbs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MemberInfo_MemType int32

const (
	MemberInfo_UNKNOWN MemberInfo_MemType = 0
	MemberInfo_FRIEND  MemberInfo_MemType = 1
	MemberInfo_GROUP   MemberInfo_MemType = 2
	MemberInfo_PEER    MemberInfo_MemType = 3
)

var MemberInfo_MemType_name = map[int32]string{
	0: "UNKNOWN",
	1: "FRIEND",
	2: "GROUP",
	3: "PEER",
}

var MemberInfo_MemType_value = map[string]int32{
	"UNKNOWN": 0,
	"FRIEND":  1,
	"GROUP":   2,
	"PEER":    3,
}

func (x MemberInfo_MemType) String() string {
	return proto.EnumName(MemberInfo_MemType_name, int32(x))
}

func (MemberInfo_MemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{6, 0}
}

type BaseEvent struct {
	EventId              int64    `protobuf:"varint,1,opt,name=EventId,proto3" json:"EventId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseEvent) Reset()         { *m = BaseEvent{} }
func (m *BaseEvent) String() string { return proto.CompactTextString(m) }
func (*BaseEvent) ProtoMessage()    {}
func (*BaseEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{0}
}

func (m *BaseEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseEvent.Unmarshal(m, b)
}
func (m *BaseEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseEvent.Marshal(b, m, deterministic)
}
func (m *BaseEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseEvent.Merge(m, src)
}
func (m *BaseEvent) XXX_Size() int {
	return xxx_messageInfo_BaseEvent.Size(m)
}
func (m *BaseEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BaseEvent proto.InternalMessageInfo

func (m *BaseEvent) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *BaseEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Event struct {
	EventId   int64  `protobuf:"varint,1,opt,name=EventId,proto3" json:"EventId,omitempty"`
	EventName string `protobuf:"bytes,2,opt,name=EventName,proto3" json:"EventName,omitempty"`
	// int32 NameId = 2;  // TODO
	Args                 []string  `protobuf:"bytes,3,rep,name=Args,proto3" json:"Args,omitempty"`
	Margs                []string  `protobuf:"bytes,4,rep,name=Margs,proto3" json:"Margs,omitempty"`
	Uargs                *Argument `protobuf:"bytes,5,opt,name=Uargs,proto3" json:"Uargs,omitempty"`
	ErrCode              int32     `protobuf:"varint,6,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg               string    `protobuf:"bytes,7,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	UserCode             int64     `protobuf:"varint,8,opt,name=UserCode,proto3" json:"UserCode,omitempty"`
	TrackId              int64     `protobuf:"varint,9,opt,name=TrackId,proto3" json:"TrackId,omitempty"`
	SpanId               int64     `protobuf:"varint,10,opt,name=SpanId,proto3" json:"SpanId,omitempty"`
	Trackts              int64     `protobuf:"varint,11,opt,name=Trackts,proto3" json:"Trackts,omitempty"`
	Json                 []byte    `protobuf:"bytes,12,opt,name=Json,proto3" json:"Json,omitempty"`
	DeviceUuid           string    `protobuf:"bytes,13,opt,name=DeviceUuid,proto3" json:"DeviceUuid,omitempty"`
	Binfo                *BaseInfo `protobuf:"bytes,14,opt,name=Binfo,proto3" json:"Binfo,omitempty"`
	Protocol             string    `protobuf:"bytes,15,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *Event) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Event) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Event) GetMargs() []string {
	if m != nil {
		return m.Margs
	}
	return nil
}

func (m *Event) GetUargs() *Argument {
	if m != nil {
		return m.Uargs
	}
	return nil
}

func (m *Event) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *Event) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *Event) GetUserCode() int64 {
	if m != nil {
		return m.UserCode
	}
	return 0
}

func (m *Event) GetTrackId() int64 {
	if m != nil {
		return m.TrackId
	}
	return 0
}

func (m *Event) GetSpanId() int64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *Event) GetTrackts() int64 {
	if m != nil {
		return m.Trackts
	}
	return 0
}

func (m *Event) GetJson() []byte {
	if m != nil {
		return m.Json
	}
	return nil
}

func (m *Event) GetDeviceUuid() string {
	if m != nil {
		return m.DeviceUuid
	}
	return ""
}

func (m *Event) GetBinfo() *BaseInfo {
	if m != nil {
		return m.Binfo
	}
	return nil
}

func (m *Event) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

// like a union struct. collect all possible arguments name
type Argument struct {
	FriendNumber         uint32   `protobuf:"varint,1,opt,name=FriendNumber,proto3" json:"FriendNumber,omitempty"`
	FriendName           string   `protobuf:"bytes,2,opt,name=FriendName,proto3" json:"FriendName,omitempty"`
	FriendAddress        string   `protobuf:"bytes,3,opt,name=FriendAddress,proto3" json:"FriendAddress,omitempty"`
	FriendPubkey         string   `protobuf:"bytes,4,opt,name=FriendPubkey,proto3" json:"FriendPubkey,omitempty"`
	GroupNumber          uint32   `protobuf:"varint,5,opt,name=GroupNumber,proto3" json:"GroupNumber,omitempty"`
	GroupTitle           string   `protobuf:"bytes,6,opt,name=GroupTitle,proto3" json:"GroupTitle,omitempty"`
	GroupIdentity        string   `protobuf:"bytes,7,opt,name=GroupIdentity,proto3" json:"GroupIdentity,omitempty"`
	GroupCookie          string   `protobuf:"bytes,8,opt,name=GroupCookie,proto3" json:"GroupCookie,omitempty"`
	GroupType            int32    `protobuf:"varint,9,opt,name=GroupType,proto3" json:"GroupType,omitempty"`
	PeerNumber           uint32   `protobuf:"varint,10,opt,name=PeerNumber,proto3" json:"PeerNumber,omitempty"`
	PeerName             string   `protobuf:"bytes,11,opt,name=PeerName,proto3" json:"PeerName,omitempty"`
	PeerPubkey           string   `protobuf:"bytes,12,opt,name=PeerPubkey,proto3" json:"PeerPubkey,omitempty"`
	MsgType              int32    `protobuf:"varint,13,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	Message              string   `protobuf:"bytes,14,opt,name=Message,proto3" json:"Message,omitempty"`
	IsTyping             int32    `protobuf:"varint,15,opt,name=IsTyping,proto3" json:"IsTyping,omitempty"`
	MessageId            uint32   `protobuf:"varint,16,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
	Status1              int32    `protobuf:"varint,17,opt,name=Status1,proto3" json:"Status1,omitempty"`
	StatusText           string   `protobuf:"bytes,18,opt,name=StatusText,proto3" json:"StatusText,omitempty"`
	ConnStatus           int32    `protobuf:"varint,19,opt,name=ConnStatus,proto3" json:"ConnStatus,omitempty"`
	Nospam               uint32   `protobuf:"varint,20,opt,name=Nospam,proto3" json:"Nospam,omitempty"`
	FileNumber           uint32   `protobuf:"varint,21,opt,name=FileNumber,proto3" json:"FileNumber,omitempty"`
	FileControl          int32    `protobuf:"varint,22,opt,name=FileControl,proto3" json:"FileControl,omitempty"`
	FileIdentity         string   `protobuf:"bytes,23,opt,name=FileIdentity,proto3" json:"FileIdentity,omitempty"`
	Sent                 int32    `protobuf:"varint,24,opt,name=Sent,proto3" json:"Sent,omitempty"`
	MimeMsgType          string   `protobuf:"bytes,25,opt,name=MimeMsgType,proto3" json:"MimeMsgType,omitempty"`
	MimeValue            string   `protobuf:"bytes,26,opt,name=MimeValue,proto3" json:"MimeValue,omitempty"`
	NextBatch            int64    `protobuf:"varint,27,opt,name=NextBatch,proto3" json:"NextBatch,omitempty"`
	PrevBatch            int64    `protobuf:"varint,28,opt,name=PrevBatch,proto3" json:"PrevBatch,omitempty"`
	AudioEnabled         int32    `protobuf:"varint,29,opt,name=AudioEnabled,proto3" json:"AudioEnabled,omitempty"`
	VideoEnabled         int32    `protobuf:"varint,30,opt,name=VideoEnabled,proto3" json:"VideoEnabled,omitempty"`
	CallState            uint32   `protobuf:"varint,31,opt,name=CallState,proto3" json:"CallState,omitempty"`
	AudioBitRate         uint32   `protobuf:"varint,32,opt,name=AudioBitRate,proto3" json:"AudioBitRate,omitempty"`
	VideoBiteRate        uint32   `protobuf:"varint,33,opt,name=VideoBiteRate,proto3" json:"VideoBiteRate,omitempty"`
	Pcm                  []byte   `protobuf:"bytes,34,opt,name=Pcm,proto3" json:"Pcm,omitempty"`
	SampleCount          int32    `protobuf:"varint,35,opt,name=SampleCount,proto3" json:"SampleCount,omitempty"`
	Channels             int32    `protobuf:"varint,36,opt,name=Channels,proto3" json:"Channels,omitempty"`
	SamplingRate         int32    `protobuf:"varint,37,opt,name=SamplingRate,proto3" json:"SamplingRate,omitempty"`
	Width                int32    `protobuf:"varint,38,opt,name=Width,proto3" json:"Width,omitempty"`
	Height               int32    `protobuf:"varint,39,opt,name=Height,proto3" json:"Height,omitempty"`
	VideoFrame           []byte   `protobuf:"bytes,40,opt,name=VideoFrame,proto3" json:"VideoFrame,omitempty"`
	TimeStamp            int64    `protobuf:"varint,41,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Argument) Reset()         { *m = Argument{} }
func (m *Argument) String() string { return proto.CompactTextString(m) }
func (*Argument) ProtoMessage()    {}
func (*Argument) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{2}
}

func (m *Argument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Argument.Unmarshal(m, b)
}
func (m *Argument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Argument.Marshal(b, m, deterministic)
}
func (m *Argument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Argument.Merge(m, src)
}
func (m *Argument) XXX_Size() int {
	return xxx_messageInfo_Argument.Size(m)
}
func (m *Argument) XXX_DiscardUnknown() {
	xxx_messageInfo_Argument.DiscardUnknown(m)
}

var xxx_messageInfo_Argument proto.InternalMessageInfo

func (m *Argument) GetFriendNumber() uint32 {
	if m != nil {
		return m.FriendNumber
	}
	return 0
}

func (m *Argument) GetFriendName() string {
	if m != nil {
		return m.FriendName
	}
	return ""
}

func (m *Argument) GetFriendAddress() string {
	if m != nil {
		return m.FriendAddress
	}
	return ""
}

func (m *Argument) GetFriendPubkey() string {
	if m != nil {
		return m.FriendPubkey
	}
	return ""
}

func (m *Argument) GetGroupNumber() uint32 {
	if m != nil {
		return m.GroupNumber
	}
	return 0
}

func (m *Argument) GetGroupTitle() string {
	if m != nil {
		return m.GroupTitle
	}
	return ""
}

func (m *Argument) GetGroupIdentity() string {
	if m != nil {
		return m.GroupIdentity
	}
	return ""
}

func (m *Argument) GetGroupCookie() string {
	if m != nil {
		return m.GroupCookie
	}
	return ""
}

func (m *Argument) GetGroupType() int32 {
	if m != nil {
		return m.GroupType
	}
	return 0
}

func (m *Argument) GetPeerNumber() uint32 {
	if m != nil {
		return m.PeerNumber
	}
	return 0
}

func (m *Argument) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *Argument) GetPeerPubkey() string {
	if m != nil {
		return m.PeerPubkey
	}
	return ""
}

func (m *Argument) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *Argument) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Argument) GetIsTyping() int32 {
	if m != nil {
		return m.IsTyping
	}
	return 0
}

func (m *Argument) GetMessageId() uint32 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *Argument) GetStatus1() int32 {
	if m != nil {
		return m.Status1
	}
	return 0
}

func (m *Argument) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

func (m *Argument) GetConnStatus() int32 {
	if m != nil {
		return m.ConnStatus
	}
	return 0
}

func (m *Argument) GetNospam() uint32 {
	if m != nil {
		return m.Nospam
	}
	return 0
}

func (m *Argument) GetFileNumber() uint32 {
	if m != nil {
		return m.FileNumber
	}
	return 0
}

func (m *Argument) GetFileControl() int32 {
	if m != nil {
		return m.FileControl
	}
	return 0
}

func (m *Argument) GetFileIdentity() string {
	if m != nil {
		return m.FileIdentity
	}
	return ""
}

func (m *Argument) GetSent() int32 {
	if m != nil {
		return m.Sent
	}
	return 0
}

func (m *Argument) GetMimeMsgType() string {
	if m != nil {
		return m.MimeMsgType
	}
	return ""
}

func (m *Argument) GetMimeValue() string {
	if m != nil {
		return m.MimeValue
	}
	return ""
}

func (m *Argument) GetNextBatch() int64 {
	if m != nil {
		return m.NextBatch
	}
	return 0
}

func (m *Argument) GetPrevBatch() int64 {
	if m != nil {
		return m.PrevBatch
	}
	return 0
}

func (m *Argument) GetAudioEnabled() int32 {
	if m != nil {
		return m.AudioEnabled
	}
	return 0
}

func (m *Argument) GetVideoEnabled() int32 {
	if m != nil {
		return m.VideoEnabled
	}
	return 0
}

func (m *Argument) GetCallState() uint32 {
	if m != nil {
		return m.CallState
	}
	return 0
}

func (m *Argument) GetAudioBitRate() uint32 {
	if m != nil {
		return m.AudioBitRate
	}
	return 0
}

func (m *Argument) GetVideoBiteRate() uint32 {
	if m != nil {
		return m.VideoBiteRate
	}
	return 0
}

func (m *Argument) GetPcm() []byte {
	if m != nil {
		return m.Pcm
	}
	return nil
}

func (m *Argument) GetSampleCount() int32 {
	if m != nil {
		return m.SampleCount
	}
	return 0
}

func (m *Argument) GetChannels() int32 {
	if m != nil {
		return m.Channels
	}
	return 0
}

func (m *Argument) GetSamplingRate() int32 {
	if m != nil {
		return m.SamplingRate
	}
	return 0
}

func (m *Argument) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Argument) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Argument) GetVideoFrame() []byte {
	if m != nil {
		return m.VideoFrame
	}
	return nil
}

func (m *Argument) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

type BaseInfo struct {
	EventId              int64                  `protobuf:"varint,1,opt,name=EventId,proto3" json:"EventId,omitempty"`
	EventName            string                 `protobuf:"bytes,2,opt,name=EventName,proto3" json:"EventName,omitempty"`
	ToxId                string                 `protobuf:"bytes,3,opt,name=ToxId,proto3" json:"ToxId,omitempty"`
	MyName               string                 `protobuf:"bytes,4,opt,name=MyName,proto3" json:"MyName,omitempty"`
	Stmsg                string                 `protobuf:"bytes,5,opt,name=Stmsg,proto3" json:"Stmsg,omitempty"`
	Status1              uint32                 `protobuf:"varint,6,opt,name=Status1,proto3" json:"Status1,omitempty"`
	Friends              map[uint32]*FriendInfo `protobuf:"bytes,7,rep,name=Friends,proto3" json:"Friends,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Groups               map[uint32]*GroupInfo  `protobuf:"bytes,8,rep,name=Groups,proto3" json:"Groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConnStatus           int32                  `protobuf:"varint,9,opt,name=ConnStatus,proto3" json:"ConnStatus,omitempty"`
	NextBatch            int64                  `protobuf:"varint,10,opt,name=NextBatch,proto3" json:"NextBatch,omitempty"`
	ToxVersion           string                 `protobuf:"bytes,11,opt,name=ToxVersion,proto3" json:"ToxVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BaseInfo) Reset()         { *m = BaseInfo{} }
func (m *BaseInfo) String() string { return proto.CompactTextString(m) }
func (*BaseInfo) ProtoMessage()    {}
func (*BaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{3}
}

func (m *BaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfo.Unmarshal(m, b)
}
func (m *BaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfo.Marshal(b, m, deterministic)
}
func (m *BaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfo.Merge(m, src)
}
func (m *BaseInfo) XXX_Size() int {
	return xxx_messageInfo_BaseInfo.Size(m)
}
func (m *BaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfo proto.InternalMessageInfo

func (m *BaseInfo) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *BaseInfo) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *BaseInfo) GetToxId() string {
	if m != nil {
		return m.ToxId
	}
	return ""
}

func (m *BaseInfo) GetMyName() string {
	if m != nil {
		return m.MyName
	}
	return ""
}

func (m *BaseInfo) GetStmsg() string {
	if m != nil {
		return m.Stmsg
	}
	return ""
}

func (m *BaseInfo) GetStatus1() uint32 {
	if m != nil {
		return m.Status1
	}
	return 0
}

func (m *BaseInfo) GetFriends() map[uint32]*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *BaseInfo) GetGroups() map[uint32]*GroupInfo {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *BaseInfo) GetConnStatus() int32 {
	if m != nil {
		return m.ConnStatus
	}
	return 0
}

func (m *BaseInfo) GetNextBatch() int64 {
	if m != nil {
		return m.NextBatch
	}
	return 0
}

func (m *BaseInfo) GetToxVersion() string {
	if m != nil {
		return m.ToxVersion
	}
	return ""
}

type FriendInfo struct {
	Fnum                 uint32   `protobuf:"varint,1,opt,name=Fnum,proto3" json:"Fnum,omitempty"`
	Status1              uint32   `protobuf:"varint,2,opt,name=Status1,proto3" json:"Status1,omitempty"`
	Pubkey               string   `protobuf:"bytes,3,opt,name=Pubkey,proto3" json:"Pubkey,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Stmsg                string   `protobuf:"bytes,5,opt,name=Stmsg,proto3" json:"Stmsg,omitempty"`
	Avatar               string   `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Seen                 int64    `protobuf:"varint,7,opt,name=Seen,proto3" json:"Seen,omitempty"`
	ConnStatus           int32    `protobuf:"varint,8,opt,name=ConnStatus,proto3" json:"ConnStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendInfo) Reset()         { *m = FriendInfo{} }
func (m *FriendInfo) String() string { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()    {}
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{4}
}

func (m *FriendInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendInfo.Unmarshal(m, b)
}
func (m *FriendInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendInfo.Marshal(b, m, deterministic)
}
func (m *FriendInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendInfo.Merge(m, src)
}
func (m *FriendInfo) XXX_Size() int {
	return xxx_messageInfo_FriendInfo.Size(m)
}
func (m *FriendInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendInfo proto.InternalMessageInfo

func (m *FriendInfo) GetFnum() uint32 {
	if m != nil {
		return m.Fnum
	}
	return 0
}

func (m *FriendInfo) GetStatus1() uint32 {
	if m != nil {
		return m.Status1
	}
	return 0
}

func (m *FriendInfo) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *FriendInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendInfo) GetStmsg() string {
	if m != nil {
		return m.Stmsg
	}
	return ""
}

func (m *FriendInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *FriendInfo) GetSeen() int64 {
	if m != nil {
		return m.Seen
	}
	return 0
}

func (m *FriendInfo) GetConnStatus() int32 {
	if m != nil {
		return m.ConnStatus
	}
	return 0
}

type GroupInfo struct {
	Gnum                 uint32                 `protobuf:"varint,1,opt,name=Gnum,proto3" json:"Gnum,omitempty"`
	Mtype                uint32                 `protobuf:"varint,2,opt,name=Mtype,proto3" json:"Mtype,omitempty"`
	GroupId              string                 `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Title                string                 `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Stmsg                string                 `protobuf:"bytes,5,opt,name=Stmsg,proto3" json:"Stmsg,omitempty"`
	Ours                 bool                   `protobuf:"varint,6,opt,name=Ours,proto3" json:"Ours,omitempty"`
	Members              map[string]*MemberInfo `protobuf:"bytes,7,rep,name=Members,proto3" json:"Members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{5}
}

func (m *GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInfo.Unmarshal(m, b)
}
func (m *GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInfo.Merge(m, src)
}
func (m *GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupInfo.Size(m)
}
func (m *GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInfo proto.InternalMessageInfo

func (m *GroupInfo) GetGnum() uint32 {
	if m != nil {
		return m.Gnum
	}
	return 0
}

func (m *GroupInfo) GetMtype() uint32 {
	if m != nil {
		return m.Mtype
	}
	return 0
}

func (m *GroupInfo) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *GroupInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GroupInfo) GetStmsg() string {
	if m != nil {
		return m.Stmsg
	}
	return ""
}

func (m *GroupInfo) GetOurs() bool {
	if m != nil {
		return m.Ours
	}
	return false
}

func (m *GroupInfo) GetMembers() map[string]*MemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

// = ContactInfo
// 可用于friend,group,peer
type MemberInfo struct {
	Pnum   uint32             `protobuf:"varint,1,opt,name=Pnum,proto3" json:"Pnum,omitempty"`
	Pubkey string             `protobuf:"bytes,2,opt,name=Pubkey,proto3" json:"Pubkey,omitempty"`
	Name   string             `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Mtype  MemberInfo_MemType `protobuf:"varint,4,opt,name=Mtype,proto3,enum=thspbs.MemberInfo_MemType" json:"Mtype,omitempty"`
	// extra
	Joints               int64    `protobuf:"varint,5,opt,name=Joints,proto3" json:"Joints,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberInfo) Reset()         { *m = MemberInfo{} }
func (m *MemberInfo) String() string { return proto.CompactTextString(m) }
func (*MemberInfo) ProtoMessage()    {}
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{6}
}

func (m *MemberInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberInfo.Unmarshal(m, b)
}
func (m *MemberInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberInfo.Marshal(b, m, deterministic)
}
func (m *MemberInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberInfo.Merge(m, src)
}
func (m *MemberInfo) XXX_Size() int {
	return xxx_messageInfo_MemberInfo.Size(m)
}
func (m *MemberInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MemberInfo proto.InternalMessageInfo

func (m *MemberInfo) GetPnum() uint32 {
	if m != nil {
		return m.Pnum
	}
	return 0
}

func (m *MemberInfo) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *MemberInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MemberInfo) GetMtype() MemberInfo_MemType {
	if m != nil {
		return m.Mtype
	}
	return MemberInfo_UNKNOWN
}

func (m *MemberInfo) GetJoints() int64 {
	if m != nil {
		return m.Joints
	}
	return 0
}

type Message struct {
	MsgId                uint64      `protobuf:"varint,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	Content              string      `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Peer                 *MemberInfo `protobuf:"bytes,3,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Created              uint64      `protobuf:"varint,4,opt,name=Created,proto3" json:"Created,omitempty"`
	Updated              uint64      `protobuf:"varint,5,opt,name=Updated,proto3" json:"Updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{7}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMsgId() uint64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *Message) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Message) GetPeer() *MemberInfo {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Message) GetCreated() uint64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Message) GetUpdated() uint64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type Messages struct {
	Msgs                 []*Message `protobuf:"bytes,1,rep,name=Msgs,proto3" json:"Msgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Messages) Reset()         { *m = Messages{} }
func (m *Messages) String() string { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()    {}
func (*Messages) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{8}
}

func (m *Messages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Messages.Unmarshal(m, b)
}
func (m *Messages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Messages.Marshal(b, m, deterministic)
}
func (m *Messages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Messages.Merge(m, src)
}
func (m *Messages) XXX_Size() int {
	return xxx_messageInfo_Messages.Size(m)
}
func (m *Messages) XXX_DiscardUnknown() {
	xxx_messageInfo_Messages.DiscardUnknown(m)
}

var xxx_messageInfo_Messages proto.InternalMessageInfo

func (m *Messages) GetMsgs() []*Message {
	if m != nil {
		return m.Msgs
	}
	return nil
}

type EmptyReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReq) Reset()         { *m = EmptyReq{} }
func (m *EmptyReq) String() string { return proto.CompactTextString(m) }
func (*EmptyReq) ProtoMessage()    {}
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{9}
}

func (m *EmptyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReq.Unmarshal(m, b)
}
func (m *EmptyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReq.Marshal(b, m, deterministic)
}
func (m *EmptyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReq.Merge(m, src)
}
func (m *EmptyReq) XXX_Size() int {
	return xxx_messageInfo_EmptyReq.Size(m)
}
func (m *EmptyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReq proto.InternalMessageInfo

type HelloReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReq) Reset()         { *m = HelloReq{} }
func (m *HelloReq) String() string { return proto.CompactTextString(m) }
func (*HelloReq) ProtoMessage()    {}
func (*HelloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{10}
}

func (m *HelloReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReq.Unmarshal(m, b)
}
func (m *HelloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReq.Marshal(b, m, deterministic)
}
func (m *HelloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReq.Merge(m, src)
}
func (m *HelloReq) XXX_Size() int {
	return xxx_messageInfo_HelloReq.Size(m)
}
func (m *HelloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReq.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReq proto.InternalMessageInfo

func (m *HelloReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HelloResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Status1              int64    `protobuf:"varint,2,opt,name=Status1,proto3" json:"Status1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResp) Reset()         { *m = HelloResp{} }
func (m *HelloResp) String() string { return proto.CompactTextString(m) }
func (*HelloResp) ProtoMessage()    {}
func (*HelloResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b96836c136eae, []int{11}
}

func (m *HelloResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResp.Unmarshal(m, b)
}
func (m *HelloResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResp.Marshal(b, m, deterministic)
}
func (m *HelloResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResp.Merge(m, src)
}
func (m *HelloResp) XXX_Size() int {
	return xxx_messageInfo_HelloResp.Size(m)
}
func (m *HelloResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResp.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResp proto.InternalMessageInfo

func (m *HelloResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HelloResp) GetStatus1() int64 {
	if m != nil {
		return m.Status1
	}
	return 0
}

func init() {
	proto.RegisterEnum("thspbs.MemberInfo_MemType", MemberInfo_MemType_name, MemberInfo_MemType_value)
	proto.RegisterType((*BaseEvent)(nil), "thspbs.BaseEvent")
	proto.RegisterType((*Event)(nil), "thspbs.Event")
	proto.RegisterType((*Argument)(nil), "thspbs.Argument")
	proto.RegisterType((*BaseInfo)(nil), "thspbs.BaseInfo")
	proto.RegisterMapType((map[uint32]*FriendInfo)(nil), "thspbs.BaseInfo.FriendsEntry")
	proto.RegisterMapType((map[uint32]*GroupInfo)(nil), "thspbs.BaseInfo.GroupsEntry")
	proto.RegisterType((*FriendInfo)(nil), "thspbs.FriendInfo")
	proto.RegisterType((*GroupInfo)(nil), "thspbs.GroupInfo")
	proto.RegisterMapType((map[string]*MemberInfo)(nil), "thspbs.GroupInfo.MembersEntry")
	proto.RegisterType((*MemberInfo)(nil), "thspbs.MemberInfo")
	proto.RegisterType((*Message)(nil), "thspbs.Message")
	proto.RegisterType((*Messages)(nil), "thspbs.Messages")
	proto.RegisterType((*EmptyReq)(nil), "thspbs.EmptyReq")
	proto.RegisterType((*HelloReq)(nil), "thspbs.HelloReq")
	proto.RegisterType((*HelloResp)(nil), "thspbs.HelloResp")
}

func init() { proto.RegisterFile("ths.proto", fileDescriptor_830b96836c136eae) }

var fileDescriptor_830b96836c136eae = []byte{
	// 1458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x4f, 0x77, 0x1b, 0x35,
	0x10, 0x67, 0xed, 0xb5, 0x63, 0xcb, 0x49, 0xeb, 0x8a, 0x12, 0x84, 0x69, 0x83, 0xd9, 0x96, 0xd6,
	0x70, 0x70, 0x4b, 0xe0, 0xbd, 0x16, 0x6e, 0x49, 0xea, 0xa4, 0x2e, 0xc4, 0xf5, 0x93, 0x9d, 0xf6,
	0xbc, 0xc9, 0xaa, 0xf6, 0x92, 0xfd, 0xe3, 0xae, 0xe4, 0xbc, 0xf8, 0xca, 0x95, 0x33, 0x07, 0xce,
	0x7c, 0x0d, 0x3e, 0x00, 0x37, 0xbe, 0x12, 0x6f, 0x46, 0xda, 0xb5, 0x6c, 0xb7, 0xe5, 0x3d, 0x6e,
	0xfa, 0xfd, 0x46, 0x1a, 0xcd, 0x3f, 0xcd, 0xec, 0x92, 0xba, 0x9a, 0xca, 0xee, 0x2c, 0x4b, 0x55,
	0x4a, 0xab, 0x6a, 0x2a, 0x67, 0xe7, 0xd2, 0xfb, 0x81, 0xd4, 0x0f, 0x7d, 0x29, 0x7a, 0x57, 0x22,
	0x51, 0x94, 0x91, 0x2d, 0x5c, 0xf4, 0x03, 0xe6, 0xb4, 0x9d, 0x4e, 0x99, 0xe7, 0x90, 0x52, 0xe2,
	0x0e, 0xfc, 0x58, 0xb0, 0x52, 0xdb, 0xe9, 0xd4, 0x39, 0xae, 0xbd, 0x3f, 0xcb, 0xa4, 0xf2, 0x5f,
	0xe7, 0xee, 0x90, 0x3a, 0x2e, 0xad, 0xc3, 0x4b, 0x02, 0xb4, 0x1e, 0x64, 0x13, 0xc9, 0xca, 0xed,
	0x32, 0x68, 0x85, 0x35, 0xbd, 0x4d, 0x2a, 0xa7, 0x3e, 0x90, 0x2e, 0x92, 0x1a, 0xd0, 0x07, 0xa4,
	0x72, 0x86, 0x6c, 0xa5, 0xed, 0x74, 0x1a, 0xfb, 0xcd, 0xae, 0x36, 0xbf, 0x7b, 0x90, 0x4d, 0xe6,
	0xb1, 0x48, 0x14, 0xd7, 0x62, 0xb4, 0x24, 0xcb, 0x8e, 0xd2, 0x40, 0xb0, 0x6a, 0xdb, 0xe9, 0x54,
	0x78, 0x0e, 0xe9, 0x2e, 0xa9, 0xf6, 0xb2, 0xec, 0x54, 0x4e, 0xd8, 0x16, 0x9a, 0x61, 0x10, 0x6d,
	0x91, 0xda, 0x99, 0x14, 0xfa, 0x48, 0x0d, 0x8d, 0x2f, 0x30, 0x68, 0x1b, 0x67, 0xfe, 0xc5, 0x65,
	0x3f, 0x60, 0x75, 0xed, 0x97, 0x81, 0xa0, 0x6d, 0x34, 0xf3, 0x93, 0x7e, 0xc0, 0x08, 0x0a, 0x0c,
	0x2a, 0x4e, 0x28, 0xc9, 0x1a, 0xd6, 0x09, 0x25, 0xc1, 0xd7, 0x17, 0x32, 0x4d, 0xd8, 0x76, 0xdb,
	0xe9, 0x6c, 0x73, 0x5c, 0xd3, 0x3d, 0x42, 0x9e, 0x89, 0xab, 0xf0, 0x42, 0x9c, 0xcd, 0xc3, 0x80,
	0xed, 0xa0, 0x5d, 0x16, 0x03, 0x5e, 0x1f, 0x86, 0xc9, 0x9b, 0x94, 0xdd, 0x58, 0xf5, 0x1a, 0x32,
	0xd6, 0x4f, 0xde, 0xa4, 0x5c, 0x8b, 0xc1, 0x07, 0xcc, 0xea, 0x45, 0x1a, 0xb1, 0x9b, 0xa8, 0xa5,
	0xc0, 0xde, 0xaf, 0x84, 0xd4, 0xf2, 0x28, 0x51, 0x8f, 0x6c, 0x1f, 0x67, 0xa1, 0x48, 0x82, 0xc1,
	0x3c, 0x3e, 0x17, 0x19, 0x66, 0x6b, 0x87, 0xaf, 0x70, 0x60, 0x94, 0xc1, 0xcb, 0x9c, 0x59, 0x0c,
	0xbd, 0x4f, 0x76, 0x34, 0x3a, 0x08, 0x82, 0x4c, 0x48, 0xc8, 0x1e, 0x6c, 0x59, 0x25, 0x97, 0x37,
	0x0d, 0xe7, 0xe7, 0x97, 0x62, 0xc1, 0x5c, 0xdc, 0xb4, 0xc2, 0xd1, 0x36, 0x69, 0x9c, 0x64, 0xe9,
	0x7c, 0x66, 0x8c, 0xa9, 0xa0, 0x31, 0x36, 0x05, 0xb6, 0x20, 0x1c, 0x87, 0x2a, 0xd2, 0x19, 0xad,
	0x73, 0x8b, 0x01, 0x5b, 0x10, 0xf5, 0x03, 0x91, 0xa8, 0x50, 0x2d, 0x4c, 0x6e, 0x57, 0xc9, 0xe2,
	0x9e, 0xa3, 0x34, 0xbd, 0x0c, 0x75, 0x96, 0xeb, 0xdc, 0xa6, 0xa0, 0x4c, 0xb5, 0xd6, 0xc5, 0x4c,
	0x60, 0xaa, 0x2b, 0x7c, 0x49, 0x80, 0x15, 0x43, 0x21, 0x32, 0x63, 0x26, 0x41, 0x33, 0x2d, 0x06,
	0xc2, 0x8f, 0x08, 0xe2, 0xd5, 0xd0, 0xe1, 0xcf, 0x71, 0x7e, 0xd6, 0x44, 0x61, 0x5b, 0x7b, 0xb0,
	0x64, 0xa0, 0x60, 0x4e, 0xe5, 0x04, 0xef, 0xdd, 0xd1, 0x05, 0x6b, 0x20, 0x4a, 0x84, 0x94, 0xfe,
	0x44, 0x60, 0xfa, 0xeb, 0x3c, 0x87, 0x70, 0x5f, 0x5f, 0x8e, 0x17, 0xb3, 0x30, 0x99, 0x60, 0xba,
	0x2b, 0xbc, 0xc0, 0xe0, 0x89, 0xd9, 0xd6, 0x0f, 0x58, 0x13, 0x4d, 0x5d, 0x12, 0xa0, 0x73, 0xa4,
	0x7c, 0x35, 0x97, 0xdf, 0xb2, 0x5b, 0xfa, 0x36, 0x03, 0xc1, 0x4e, 0xbd, 0x1c, 0x8b, 0x6b, 0xc5,
	0xa8, 0xb6, 0x73, 0xc9, 0x80, 0xfc, 0x28, 0x4d, 0x12, 0xcd, 0xb0, 0x8f, 0xf1, 0xb0, 0xc5, 0xc0,
	0x83, 0x18, 0xa4, 0x72, 0xe6, 0xc7, 0xec, 0x36, 0x5e, 0x6a, 0x10, 0x56, 0x53, 0x18, 0x09, 0x13,
	0xbb, 0x4f, 0x74, 0xec, 0x96, 0x0c, 0xe4, 0x06, 0xd0, 0x51, 0x9a, 0xa8, 0x2c, 0x8d, 0xd8, 0x2e,
	0x2a, 0xb6, 0x29, 0xac, 0xa4, 0x30, 0x12, 0x45, 0x8a, 0x3f, 0x35, 0x95, 0x64, 0x71, 0xf0, 0xb8,
	0x46, 0x22, 0x51, 0x8c, 0xe1, 0x71, 0x5c, 0x83, 0xe6, 0xd3, 0x30, 0x16, 0x79, 0x74, 0x3f, 0xd3,
	0x59, 0xb7, 0x28, 0x8c, 0x55, 0x18, 0x8b, 0x57, 0x7e, 0x34, 0x17, 0xac, 0xa5, 0x9b, 0x53, 0x41,
	0x80, 0x74, 0x20, 0xae, 0xd5, 0xa1, 0xaf, 0x2e, 0xa6, 0xec, 0x73, 0x7c, 0xcc, 0x4b, 0x02, 0xa4,
	0xc3, 0x4c, 0x5c, 0x69, 0xe9, 0x1d, 0x2d, 0x2d, 0x08, 0xb0, 0xf9, 0x60, 0x1e, 0x84, 0x69, 0x2f,
	0xf1, 0xcf, 0x23, 0x11, 0xb0, 0xbb, 0x68, 0xd7, 0x0a, 0x07, 0x7b, 0x5e, 0x85, 0x81, 0x28, 0xf6,
	0xec, 0xe9, 0x3d, 0x36, 0x07, 0xb7, 0x1c, 0xf9, 0x51, 0x04, 0x31, 0x16, 0xec, 0x0b, 0x9d, 0xcd,
	0x82, 0x28, 0x6e, 0x39, 0x0c, 0x15, 0x87, 0x0d, 0x6d, 0xfd, 0x9a, 0x6d, 0x0e, 0x5e, 0x08, 0x6a,
	0x3c, 0x0c, 0x95, 0xc0, 0x4d, 0x5f, 0xe2, 0xa6, 0x55, 0x92, 0x36, 0x49, 0x79, 0x78, 0x11, 0x33,
	0x0f, 0x7b, 0x13, 0x2c, 0x21, 0x7a, 0x23, 0x3f, 0x9e, 0x41, 0x1a, 0xe6, 0x89, 0x62, 0xf7, 0x74,
	0x5e, 0x2c, 0x0a, 0xaa, 0xf0, 0x68, 0xea, 0x27, 0x89, 0x88, 0x24, 0xbb, 0xaf, 0xab, 0x30, 0xc7,
	0x60, 0x19, 0x6e, 0x0d, 0x93, 0x09, 0x5e, 0xfa, 0x95, 0xf6, 0xcd, 0xe6, 0xa0, 0xd1, 0xbf, 0x0e,
	0x03, 0x35, 0x65, 0x0f, 0x50, 0xa8, 0x01, 0xd4, 0xd1, 0x73, 0x11, 0x4e, 0xa6, 0x8a, 0x3d, 0x44,
	0xda, 0x20, 0xa8, 0x23, 0x34, 0xf9, 0x38, 0x83, 0x57, 0xd6, 0x41, 0x43, 0x2d, 0x06, 0x22, 0x35,
	0x0e, 0x63, 0x31, 0x52, 0x7e, 0x3c, 0x63, 0x5f, 0xeb, 0x7c, 0x14, 0x84, 0xf7, 0x9b, 0x4b, 0x6a,
	0x79, 0xd3, 0xfc, 0xdf, 0xd3, 0xea, 0x36, 0xa9, 0x8c, 0xd3, 0xeb, 0x7e, 0x60, 0x1a, 0x9e, 0x06,
	0x60, 0xf0, 0xe9, 0x02, 0x0f, 0xe8, 0x16, 0x67, 0x10, 0xec, 0x1e, 0xa9, 0x58, 0x4e, 0xb0, 0xad,
	0xd5, 0xb9, 0x06, 0xf6, 0x03, 0xac, 0x62, 0x22, 0x8a, 0x07, 0xf8, 0x84, 0x6c, 0xe9, 0xe6, 0x28,
	0xd9, 0x56, 0xbb, 0xdc, 0x69, 0xec, 0xdf, 0x5d, 0xef, 0xf6, 0x5d, 0x23, 0xef, 0x25, 0x2a, 0x5b,
	0xf0, 0x7c, 0x37, 0xfd, 0x9e, 0x54, 0xb1, 0x55, 0x49, 0x56, 0xc3, 0x73, 0x77, 0x36, 0xce, 0x69,
	0xb1, 0x3e, 0x66, 0xf6, 0xae, 0xbd, 0xe7, 0xfa, 0xc6, 0x7b, 0x5e, 0xa9, 0x7e, 0xb2, 0x5e, 0xfd,
	0x7b, 0x84, 0x8c, 0xd3, 0xeb, 0x57, 0x22, 0x93, 0x61, 0x9a, 0x98, 0x9e, 0x67, 0x31, 0xad, 0x41,
	0xde, 0xfd, 0xf5, 0xad, 0x50, 0x5f, 0xd0, 0xfe, 0xf4, 0xb8, 0x81, 0x25, 0xed, 0x90, 0xca, 0x15,
	0xbe, 0xbb, 0x12, 0x8e, 0x36, 0x9a, 0x1b, 0xad, 0x8f, 0xe9, 0xe1, 0x86, 0x1b, 0x7e, 0x2c, 0x3d,
	0x75, 0x5a, 0x3f, 0x9b, 0x0e, 0xfe, 0x5e, 0x75, 0x0f, 0x57, 0xd5, 0xdd, 0xca, 0xd5, 0xe9, 0x41,
	0xb0, 0xaa, 0xcd, 0xfb, 0xdb, 0xc9, 0x47, 0x1c, 0xd6, 0x03, 0x25, 0xee, 0x71, 0x32, 0x8f, 0x8d,
	0x3a, 0x5c, 0xdb, 0x79, 0x2a, 0xad, 0xe6, 0x69, 0x97, 0x54, 0x4d, 0x33, 0xd7, 0x65, 0x60, 0x50,
	0xf1, 0x85, 0xe4, 0x2e, 0xbf, 0x90, 0xde, 0x53, 0x03, 0xbb, 0xa4, 0x7a, 0x70, 0xe5, 0x2b, 0x3f,
	0x33, 0x03, 0xcd, 0x20, 0xdd, 0xc4, 0x44, 0x82, 0x33, 0xac, 0xcc, 0x71, 0xbd, 0x96, 0xa6, 0xda,
	0x7a, 0x9a, 0xbc, 0x3f, 0x4a, 0x66, 0x72, 0xe5, 0x9e, 0x9c, 0x58, 0x9e, 0xc0, 0x1a, 0xbf, 0xa7,
	0x14, 0x34, 0x40, 0xed, 0x87, 0x06, 0xe0, 0x9f, 0x99, 0x91, 0xc6, 0x8d, 0x1c, 0x62, 0x95, 0xe3,
	0xb4, 0x75, 0x4d, 0x95, 0xe3, 0xa0, 0x7d, 0xb7, 0x27, 0x94, 0xb8, 0x2f, 0xe7, 0x99, 0x44, 0x3f,
	0x6a, 0x1c, 0xd7, 0xf4, 0x29, 0x8c, 0x2d, 0x68, 0xed, 0x79, 0x1d, 0xef, 0x6d, 0xe4, 0xa2, 0x6b,
	0x36, 0x98, 0x42, 0x36, 0x08, 0x8a, 0xc6, 0x16, 0xd8, 0x59, 0xae, 0x7f, 0xb8, 0x68, 0xf4, 0xb1,
	0xf5, 0x34, 0xff, 0xe3, 0x10, 0xb2, 0x94, 0x80, 0xb1, 0x43, 0x2b, 0x38, 0xb0, 0xb6, 0x92, 0x59,
	0x7a, 0x67, 0x32, 0xcb, 0x56, 0x32, 0x1f, 0xe7, 0x81, 0x84, 0xc0, 0xdc, 0xd8, 0x6f, 0x6d, 0x5e,
	0x0e, 0x4b, 0x18, 0x2c, 0x79, 0x90, 0x77, 0x49, 0xf5, 0x45, 0x1a, 0x26, 0x4a, 0x7f, 0xb5, 0x96,
	0xb9, 0x41, 0xde, 0x13, 0x0c, 0x11, 0x8e, 0xa0, 0x06, 0xd9, 0x3a, 0x1b, 0xfc, 0x34, 0x78, 0xf9,
	0x7a, 0xd0, 0xfc, 0x88, 0x12, 0x52, 0x3d, 0xe6, 0xfd, 0xde, 0xe0, 0x59, 0xd3, 0xa1, 0x75, 0x52,
	0x39, 0xe1, 0x2f, 0xcf, 0x86, 0xcd, 0x12, 0xad, 0x11, 0x77, 0xd8, 0xeb, 0xf1, 0x66, 0xd9, 0xfb,
	0xdd, 0x29, 0xbe, 0x09, 0x30, 0xaf, 0x72, 0x62, 0x7a, 0x98, 0xcb, 0x35, 0x80, 0xbc, 0xc2, 0xdc,
	0x84, 0x59, 0xa8, 0x3d, 0xca, 0x21, 0x7d, 0x40, 0x5c, 0xf8, 0xec, 0x40, 0x97, 0xde, 0x1d, 0x3a,
	0x94, 0xa3, 0x86, 0x4c, 0xf8, 0x4a, 0x04, 0xe8, 0xa8, 0xcb, 0x73, 0x08, 0x92, 0xb3, 0x59, 0x80,
	0x92, 0x8a, 0x96, 0x18, 0xe8, 0x3d, 0x22, 0x35, 0x63, 0x96, 0xa4, 0xf7, 0x88, 0x7b, 0x2a, 0x27,
	0x92, 0x39, 0x98, 0xfc, 0x9b, 0xcb, 0x7b, 0x50, 0xce, 0x51, 0xe8, 0x11, 0x52, 0xeb, 0xc5, 0x33,
	0xb5, 0xe0, 0xe2, 0xad, 0xf7, 0x98, 0xd4, 0x9e, 0x8b, 0x28, 0x4a, 0xb9, 0x78, 0x5b, 0xc4, 0xdd,
	0xb1, 0xe2, 0xde, 0x24, 0x65, 0xf8, 0x6a, 0xd7, 0xee, 0xc0, 0x12, 0xfe, 0x59, 0xcc, 0x09, 0x39,
	0x83, 0x23, 0xf8, 0xed, 0xee, 0xe8, 0xd1, 0x9f, 0x7f, 0xb7, 0xdb, 0xaf, 0xb7, 0x5c, 0xbc, 0xde,
	0xfd, 0xbf, 0x1c, 0x6c, 0xe2, 0x53, 0x49, 0xbb, 0x64, 0x7b, 0x98, 0x46, 0x11, 0x4c, 0xd3, 0x73,
	0xff, 0xe2, 0x92, 0xee, 0xe4, 0x96, 0x62, 0xc3, 0x6f, 0xad, 0xc2, 0xc7, 0x0e, 0xed, 0x92, 0xc6,
	0x89, 0x50, 0xc5, 0x10, 0x59, 0xdb, 0xbe, 0xf1, 0x69, 0x4e, 0x1f, 0x92, 0x2d, 0x1e, 0x2b, 0x50,
	0xff, 0x61, 0xd5, 0xf4, 0x1b, 0xe2, 0x0e, 0xe1, 0xcb, 0xad, 0x50, 0x91, 0x47, 0xa6, 0xb5, 0xc1,
	0xec, 0xff, 0x02, 0xcf, 0x56, 0x08, 0x25, 0x32, 0xda, 0x25, 0xb5, 0x91, 0xbf, 0xc0, 0x38, 0x7c,
	0xe8, 0x68, 0x11, 0xda, 0x47, 0xa4, 0x9e, 0xef, 0xbf, 0xa6, 0x1b, 0xe2, 0xcd, 0x03, 0xe7, 0x55,
	0xfc, 0x85, 0xf8, 0xee, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xbf, 0x8b, 0xc3, 0x35, 0x0e,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ToxhsClient is the client API for Toxhs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToxhsClient interface {
	PollCallback(ctx context.Context, in *Event, opts ...grpc.CallOption) (Toxhs_PollCallbackClient, error)
	GetBaseInfo(ctx context.Context, in *Event, opts ...grpc.CallOption) (*BaseInfo, error)
	RmtCall(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Event, error)
	Ping(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyReq, error)
}

type toxhsClient struct {
	cc *grpc.ClientConn
}

func NewToxhsClient(cc *grpc.ClientConn) ToxhsClient {
	return &toxhsClient{cc}
}

func (c *toxhsClient) PollCallback(ctx context.Context, in *Event, opts ...grpc.CallOption) (Toxhs_PollCallbackClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Toxhs_serviceDesc.Streams[0], "/thspbs.Toxhs/PollCallback", opts...)
	if err != nil {
		return nil, err
	}
	x := &toxhsPollCallbackClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Toxhs_PollCallbackClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type toxhsPollCallbackClient struct {
	grpc.ClientStream
}

func (x *toxhsPollCallbackClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *toxhsClient) GetBaseInfo(ctx context.Context, in *Event, opts ...grpc.CallOption) (*BaseInfo, error) {
	out := new(BaseInfo)
	err := c.cc.Invoke(ctx, "/thspbs.Toxhs/GetBaseInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toxhsClient) RmtCall(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/thspbs.Toxhs/RmtCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toxhsClient) Ping(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyReq, error) {
	out := new(EmptyReq)
	err := c.cc.Invoke(ctx, "/thspbs.Toxhs/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToxhsServer is the server API for Toxhs service.
type ToxhsServer interface {
	PollCallback(*Event, Toxhs_PollCallbackServer) error
	GetBaseInfo(context.Context, *Event) (*BaseInfo, error)
	RmtCall(context.Context, *Event) (*Event, error)
	Ping(context.Context, *EmptyReq) (*EmptyReq, error)
}

func RegisterToxhsServer(s *grpc.Server, srv ToxhsServer) {
	s.RegisterService(&_Toxhs_serviceDesc, srv)
}

func _Toxhs_PollCallback_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Event)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ToxhsServer).PollCallback(m, &toxhsPollCallbackServer{stream})
}

type Toxhs_PollCallbackServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type toxhsPollCallbackServer struct {
	grpc.ServerStream
}

func (x *toxhsPollCallbackServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Toxhs_GetBaseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToxhsServer).GetBaseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thspbs.Toxhs/GetBaseInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToxhsServer).GetBaseInfo(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Toxhs_RmtCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToxhsServer).RmtCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thspbs.Toxhs/RmtCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToxhsServer).RmtCall(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Toxhs_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToxhsServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thspbs.Toxhs/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToxhsServer).Ping(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Toxhs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thspbs.Toxhs",
	HandlerType: (*ToxhsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBaseInfo",
			Handler:    _Toxhs_GetBaseInfo_Handler,
		},
		{
			MethodName: "RmtCall",
			Handler:    _Toxhs_RmtCall_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Toxhs_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PollCallback",
			Handler:       _Toxhs_PollCallback_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ths.proto",
}

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	SayHello(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*HelloReq, error)
	// 测试带参数的hello
	SayHellox(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloReq, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*HelloReq, error) {
	out := new(HelloReq)
	err := c.cc.Invoke(ctx, "/thspbs.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SayHellox(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloReq, error) {
	out := new(HelloReq)
	err := c.cc.Invoke(ctx, "/thspbs.Greeter/SayHellox", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	SayHello(context.Context, *EmptyReq) (*HelloReq, error)
	// 测试带参数的hello
	SayHellox(context.Context, *HelloReq) (*HelloReq, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thspbs.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SayHellox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHellox(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thspbs.Greeter/SayHellox",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHellox(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thspbs.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
		{
			MethodName: "SayHellox",
			Handler:    _Greeter_SayHellox_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ths.proto",
}
