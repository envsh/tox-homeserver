syntax = "proto3";
package thspbs;


service Toxhs {
    rpc PollCallback(Event) returns(stream Event);
    rpc GetBaseInfo(Event) returns(BaseInfo);
    rpc RmtCall(Event) returns(Event);
    rpc Ping(EmptyReq) returns(EmptyReq);
}

message Event {
    int64 EventId = 1;
    string Name = 2; // event name
    // int32 NameId = 2;  // TODO
    repeated string Args = 3;
    repeated string Margs = 4; // more info based on args
    Argument Uargs = 5; // replace named arguments. And even replace both Args and Margs fields
    int32 ErrCode = 6; // error code
    string ErrMsg = 7; // error msg
    int64 UserCode = 8; // crc64(device id + runtime sequence)
    int64 TrackId = 9; // used for global tracker
    int64 SpanId = 10; // program module id for edge tracker
    int64 Trackts = 11; // used for tracker. randomly set, and client can output info if it set
    bytes Json = 12;
    string DeviceUuid = 13;
    BaseInfo Binfo = 14;
}

// like a union struct. collect all possible arguments name
message Argument {
    uint32 FriendNumber = 1;
    string FriendName = 2;
    string FriendAddress = 3;
    string FriendPubkey = 4;
    uint32 GroupNumber = 5;
    string GroupTitle = 6;
    string GroupIdentity = 7;
    string GroupCookie = 8;
    int32  GroupType = 9;
    uint32 PeerNumber = 10;
    string PeerName = 11;
    string PeerPubkey = 12;
    int32  MsgType = 13; // action?
    string Message = 14;
    int32 IsTyping = 15;
    uint32 MessageId = 16; // receipt
    int32 Status = 17;
    string StatusText = 18;
    int32 ConnStatus = 19;
    uint32 Nospam = 20;
    uint32 FileNumber = 21;
    int32 FileControl = 22;
    string FileIdentity = 23;
    int32  Sent = 24;
    string MimeMsgType = 25;
    string MimeValue = 26;
    int64 NextBatch = 27;
    int64 PrevBatch = 28;
    int32 AudioEnabled = 29;
    int32 VideoEnabled = 30;
    uint32 CallState = 31;
    uint32 AudioBitRate = 32;
    uint32 VideoBiteRate = 33;
    bytes Pcm = 34;
    int32 SampleCount = 35;
    int32 Channels = 36;
    int32 SamplingRate = 37;
    int32 Width = 38;
    int32 Height = 39;
    bytes VideoFrame = 40;
    int64 TimeStamp = 41;
}

message BaseInfo {
    string ToxId = 1;
    string Name = 2;
    string Stmsg = 3; // statusText
    uint32 Status = 4;
    map<uint32,FriendInfo> Friends = 5;
    map<uint32,GroupInfo> Groups = 6;
    int32 ConnStatus = 7;
    int64 NextBatch = 8;
    string ToxVersion = 9;
}

message FriendInfo {
    uint32 Fnum = 1;
    uint32 Status = 2;
    string Pubkey = 3;
    string Name = 4;
    string Stmsg = 5;
    string Avatar = 6;
    uint64 Seen  = 7;
    int32 ConnStatus = 8;
}

message GroupInfo {
    uint32 Gnum = 1;
    uint32 Mtype = 2;
    string GroupId = 3;
    string Title = 4;
    string Stmsg = 5;
    bool Ours = 6;
    map<string, MemberInfo> Members = 7;
}

// = ContactInfo
// 可用于friend,group,peer
message MemberInfo {
    uint32 Pnum = 1;
    string Pubkey = 2;
    string Name = 3;
    enum MemType { UNKNOWN = 0; FRIEND = 1; GROUP = 2; PEER = 3;}
    MemType Mtype = 4; // member type, friend, group, peer
    // extra
    int64 Joints = 5;
}

message Message 
{
    uint64 MsgId = 1;
    string Content = 2;
    MemberInfo Peer = 3;
    uint64 Created = 4;
    uint64 Updated = 5;
}

message Messages
{
    repeated Message Msgs = 1;
}


///////
service Greeter {
    rpc SayHello(EmptyReq) returns(HelloReq);
    // 测试带参数的hello
    rpc SayHellox(HelloReq) returns(HelloReq);
}

message EmptyReq {}

message HelloReq {
    string Name = 1;
    string Msg = 2;
}
message HelloResp {
    int32 Code = 1;
    int64 Status = 2;
}

